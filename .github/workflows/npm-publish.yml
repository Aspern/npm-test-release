# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node.js Package

on:
  push:
    tags:
      - '\d+.\d+.\d+'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - name: set release version
        run: |
          # Using Tag as version number for next release
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: validate version number
        run: |
          # Currently only validates stable versions
          if [[ "$RELEASE_VERSION" =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            echo "Creation release with version $RELEASE_VERSION"
          else
            echo "$RELEASE_VERSION does not match format Major.Minor.Patch"
            exit 1
          fi
      - name: validate latest changelog entry
        run: |
          FIRST_CHANGELOG_LINE=$(head -n 1 CHANGELOG.md)
          if [[ "$FIRST_CHANGELOG_LINE" =~ ^\#[[:space:]]${RELEASE_VERSION//./\\.}.* ]]; then
            echo "First changelog entry describes current version $RELEASE_VERSION"
          else
            echo "First changelog entry does not describe current version $RELEASE_VERSION."
            exit 1
          fi
      - name: bump version in package.json
        run: |
          # jq can't replace file contents directly therefore a tmp file is needed
          tmp_file=$(mktemp)
          
          cp package.json "$tmp_file" \
            && jq --arg version "$RELEASE_VERSION" '.version=$version' "$tmp_file" >package.json \
            && rm -f "$tmp_file"
      - name: publish npm package
        run: npm publish --dry-run
